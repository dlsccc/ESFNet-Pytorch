[Directory]
root_dir = /home/UserGroup/UserName/Building_Detection/cropped_aerial_torch_512 #根目录
save_dir = ${root_dir}/save
log_dir = ${save_dir}/log
test_dir = ${save_dir}/test
test_log_dir = ${test_dir}/log
pred_dir = ${test_dir}/predict
trainset_dir = ${root_dir}/train
validset_dir = ${root_dir}/val
testset_dir = ${root_dir}/test
data_folder_name = image        #如何设置？（1）
target_folder_name = label      #如何设置？（2）

[Data]
batch_size = 16     #每个训练批次中的样本数量
nb_classes = 2      #定义数据集中的类别数量。这是一个多类别分类问题，数据集中共有2个类别。
original_size = 512 #定义输入图像的原始大小。这里设定为512，表示输入图像的宽度和高度均为512像素。
cropped_size = 256  #定义训练过程中采用的裁剪大小。在数据增强过程中，可能会将原始图像裁剪为更小的尺寸。这里设定为256，表示裁剪后的图像尺寸为256x256像素。
input_size = 512    #定义输入模型的图像大小。通常情况下，模型需要固定大小的输入。
overlapped = 0      #定义数据集中图像是否有重叠部分。这里设定为0，表示图像之间没有重叠。

[General]
use_gpu = True          #定义是否使用GPU进行训练。如果设为True，那么程序将使用GPU加速训练，否则将使用CPU进行训练。
use_multi_gpus = False  #定义是否使用多个GPU进行训练。
device_id = 0           #定义用于训练的GPU设备编号。如果使用GPU进行训练，可以指定使用哪个GPU设备。这里设定为0，表示使用第一个GPU设备。（3）
random_seed = 1         #定义随机种子。设置随机种子可以使随机过程在每次运行时保持一致，以确保实验的可重复性。
num_workers = 0         #定义用于数据加载的线程数量。在使用DataLoader加载数据时，可以设置多线程进行数据加载，以加快数据加载速度。这里设定为0，表示不使用额外的线程进行数据加载。

[Optimizer]             #优化器
lr_algorithm = adam     #定义学习率调整算法。这里设定为"adam"，表示使用Adam优化器，它是一种常用的自适应学习率优化算法。
init_lr = 5e-4          #定义初始学习率。学习率是控制模型在每次迭代中更新权重的步长，这里设定为5e-4，即初始学习率为0.0005。
lr_decay = 1e-1         #定义学习率的衰减率。在训练过程中，学习率可能会逐渐衰减，以便模型更好地收敛到最优解。这里设定为1e-1，即学习率每次更新时衰减为原来的0.1倍。
momentum = 0.9          #定义动量参数。动量是一种用于加速优化过程的技术，在更新权重时考虑上一次的权重更新方向。这里设定为0.9，表示动量参数为0.9。
weight_decay = 2e-4     #定义权重衰减参数。权重衰减是一种正则化技术，用于防止模型过拟合。这里设定为2e-4，即权重衰减参数为0.0002。
epsilon = 1e-8          #定义优化算法中的小值常数。在一些优化算法中，为了避免除以零等错误，会引入一个小的常数值。这里设定为1e-8，即epsilon为0.00000001。

[Train]
monitor = max/MIoU          #定义模型训练中的监控指标。这里设定为"max/MIoU"，表示使用最大的Mean Intersection over Union（MIoU）作为监控指标。在训练过程中，监控指标将用于选择模型在验证集上表现最好的参数，并进行保存。
init_algorithm = kaiming    #定义权重初始化算法。权重初始化是在训练开始时，给模型参数一个初始值的过程。这里设定为"kaiming"，表示使用Kaiming初始化算法，它适用于ReLU激活函数的网络。
loss = crossentropy         #定义损失函数。损失函数用于衡量模型在训练过程中的预测结果与真实标签之间的差异。这里设定为"crossentropy"，表示使用交叉熵损失函数，适用于多类别分类问题。
pre_trained = False         #定义是否使用预训练的模型。如果设为True，那么程序将加载预训练的模型参数，作为模型训练的初始权重。如果设为False，那么模型将从头开始训练。
visualization = True        #定义是否使用预训练的模型。如果设为True，那么程序将加载预训练的模型参数，作为模型训练的初始权重。如果设为False，那么模型将从头开始训练。
verbosity = 2               #定义训练过程中的输出详细程度。这里设定为2，表示输出较为详细的训练信息。
early_stop = 10             #定义早停策略的阈值。早停是一种防止过拟合的策略，在训练过程中如果验证指标在一定迭代次数内没有显著改善，就提前终止训练。这里设定为10，表示在验证指标连续10次没有改善时，终止训练。
save_period = 10            #定义模型保存的间隔。这里设定为10，表示每训练10个迭代周期，就保存一次模型参数。
dis_period = 20             #定义训练过程中输出信息的间隔。这里设定为20，表示每训练20个迭代周期，就输出一次训练信息。
epochs = 300                #定义训练的迭代周期数。训练过程将持续进行多少个迭代周期，每个周期包含多个批次的训练。

